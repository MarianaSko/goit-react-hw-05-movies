{"version":3,"file":"static/js/186.96452f98.chunk.js","mappings":"2OAgDA,UA1CgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAe1B,OAdAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAEtBd,GAAa,GAAMa,EAAAE,KAAA,GACOC,EAAAA,EAAAA,IAAWvB,GAAI,KAAD,EAAAkB,EAAAE,EAAAI,KAAhCL,EAAOD,EAAPC,QACRR,EAAWQ,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEpBM,QAAQC,IAAIP,EAAAK,GAAMG,SAAS,QAEP,OAFOR,EAAAC,KAAA,GAE3Bd,GAAa,GAAOa,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEvB,kBAVsB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAWvBnB,GACF,GAAG,CAACb,KAEFiC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACG5B,IAAa6B,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAF,SAAC,gBAE5BC,EAAAA,EAAAA,KAAA,MAAAD,SACsB,IAAnBxB,EAAQ2B,OACP3B,EAAQ4B,KAAI,SAAAC,GAAM,OAChBN,EAAAA,EAAAA,MAACO,EAAAA,EAAY,CAAAN,SAAA,EACXD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAc,IAAEK,EAAOE,WAE/BN,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAOG,YAJMH,EAAOvC,GAKX,KAGjBmC,EAAAA,EAAAA,KAACQ,EAAAA,EAAa,CAAAT,SAAC,kDAOzB,C,uGC5CaM,EAAeI,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+OAgBxBH,EAAgBC,EAAAA,GAAAA,EAAQG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,kF","sources":["components/Reviews/Reviews.jsx","components/Reviews/Reviews.styled.jsx"],"sourcesContent":["import { getReviews } from 'Api/movies';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { StyledMessage, StyledReview } from './Reviews.styled';\nimport { StyledLoader } from '../../pages/Page.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const getReviewsFromApi = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getReviews(id);\n        setReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewsFromApi();\n  }, [id]);\n  return (\n    <div>\n      {isLoading && <StyledLoader>Loading...</StyledLoader>}\n\n      <ul>\n        {reviews.length !== 0 ? (\n          reviews.map(review => (\n            <StyledReview key={review.id}>\n              <h3>\n                <span>Author:</span> {review.author}\n              </h3>\n              <p>{review.content}</p>\n            </StyledReview>\n          ))\n        ) : (\n          <StyledMessage>\n            We don't have any reviews for this movie.\n          </StyledMessage>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const StyledReview = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  flex-direction: column;\n  color: #01232e;\n  span {\n    font-weight: bold;\n    text-transform: uppercase;\n    color: #025c7a;\n  }\n  p {\n    font-weight: 500;\n  }\n`;\n\nexport const StyledMessage = styled.p`\n  font-style: oblique;\n  color: #025c7a;\n  text-transform: uppercase;\n`;\n"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","reviews","setReviews","useEffect","getReviewsFromApi","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getReviews","results","_context","prev","next","getReviews","sent","t0","console","log","message","finish","stop","apply","arguments","_jsxs","children","_jsx","StyledLoader","length","map","review","StyledReview","author","content","StyledMessage","styled","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sourceRoot":""}